/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.PatientRecordList;
import model.Person;
import model.PersonList;

/**
 *
 * @author amretasrerengarajan
 */
public class ViewPersonPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPersonPanel
     */
    boolean isValidId;
    boolean isValidName;
    boolean isValidComm;
    boolean isValidCity;
    boolean isValidPincode;

    int patientID;
    String patientName;
    String patientComm;
    String patientCity;
    long patientPincode;

    PersonList personList;

    public ViewPersonPanel(PersonList personList) {
        this.personList = personList;
        initComponents();
        populateTableWithPersonRecords();

        lblWarningCity.setVisible(false);
        lblWarningComm.setVisible(false);
        lblWarningPatID.setVisible(false);
        lblWarningPatName.setVisible(false);
        lblWarningPincode.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewPatientRecords = new javax.swing.JTable();
        lblPatientId = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        lblWarningPatID = new javax.swing.JLabel();
        lblWarningPatName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblPatientName = new javax.swing.JLabel();
        lblPatientComm = new javax.swing.JLabel();
        txtPatientComm = new javax.swing.JTextField();
        lblWarningComm = new javax.swing.JLabel();
        lblWarningCity = new javax.swing.JLabel();
        txtPatientCity = new javax.swing.JTextField();
        lblPatienCity = new javax.swing.JLabel();
        lblPatientPincode = new javax.swing.JLabel();
        txtPatientPincode = new javax.swing.JTextField();
        lblWarningPincode = new javax.swing.JLabel();
        btnUpdateDetails = new javax.swing.JButton();
        btnDeleteDetails = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 255, 204));

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 0, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View Patient Records");

        tblViewPatientRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "Community", "City", "Pincode"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewPatientRecords);

        lblPatientId.setForeground(new java.awt.Color(255, 0, 204));
        lblPatientId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientId.setText("Patient ID:");

        txtPatientID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPatientIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPatientIDFocusLost(evt);
            }
        });

        lblWarningPatID.setForeground(new java.awt.Color(255, 0, 0));
        lblWarningPatID.setText("Cannot Edit This Field!");

        lblWarningPatName.setForeground(new java.awt.Color(255, 0, 0));
        lblWarningPatName.setText("Invalid Text!");

        txtPatientName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPatientNameFocusLost(evt);
            }
        });

        lblPatientName.setForeground(new java.awt.Color(255, 0, 204));
        lblPatientName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientName.setText("Patient Name:");

        lblPatientComm.setForeground(new java.awt.Color(255, 0, 204));
        lblPatientComm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientComm.setText("Community:");

        txtPatientComm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPatientCommFocusLost(evt);
            }
        });

        lblWarningComm.setForeground(new java.awt.Color(255, 0, 0));
        lblWarningComm.setText("Invalid!");

        lblWarningCity.setForeground(new java.awt.Color(255, 0, 0));
        lblWarningCity.setText("Boston or boston!");

        txtPatientCity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPatientCityFocusLost(evt);
            }
        });

        lblPatienCity.setForeground(new java.awt.Color(255, 0, 204));
        lblPatienCity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatienCity.setText("City:");

        lblPatientPincode.setForeground(new java.awt.Color(255, 0, 204));
        lblPatientPincode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientPincode.setText("Pincode:");

        txtPatientPincode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPatientPincodeFocusLost(evt);
            }
        });

        lblWarningPincode.setForeground(new java.awt.Color(255, 0, 0));
        lblWarningPincode.setText("Invalid!");

        btnUpdateDetails.setText("Update");
        btnUpdateDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDetailsActionPerformed(evt);
            }
        });

        btnDeleteDetails.setText("Delete");

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update Patient Record");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnUpdateDetails)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblPatienCity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPatientComm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPatientName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPatientId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPatientPincode, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPatientPincode, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblWarningPincode, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPatientName)
                                    .addComponent(txtPatientComm, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblWarningPatName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblWarningComm, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPatientCity, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblWarningCity, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDeleteDetails)
                                    .addComponent(lblWarningPatID, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnSave))
                        .addGap(0, 55, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblWarningCity, lblWarningComm, lblWarningPatID, lblWarningPatName, lblWarningPincode});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateDetails)
                    .addComponent(btnDeleteDetails))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWarningPatID)
                    .addComponent(lblPatientId))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWarningPatName)
                    .addComponent(lblPatientName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWarningComm)
                    .addComponent(lblPatientComm))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWarningCity)
                    .addComponent(lblPatienCity))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientPincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWarningPincode)
                    .addComponent(lblPatientPincode))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addGap(47, 47, 47))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateTableWithPersonRecords() {
        DefaultTableModel personTable = (DefaultTableModel) tblViewPatientRecords.getModel();
        personTable.setRowCount(0);
        for (Person person : personList.getUserList()) {
            Object[] row = new Object[5];
            row[0] = person.getPersonId();
            row[1] = person;
            row[2] = person.getPersonCommunity();
            row[3] = person.getPersonCity();
            row[4] = person.getPincode();

            personTable.addRow(row);
        }
    }

    public int checkPatientID(String patientID) {
        String regex = "\\d{5}";
        int result;
        isValidId = patientID.matches(regex);
        if (isValidId && !patientID.isEmpty()) {
            result = Integer.parseInt(patientID);
        } else {
            result = 0;
        }
        return result;
    }

    public String checkPatientName(String patientName) {
        String regex = "^[a-zA-Z]*$";
        isValidName = patientName.matches(regex);
        if (isValidName) {
            return patientName;
        } else {
            return "";
        }
    }

    public String checkPatientComm(String patientComm) {
        String regex = "^[\\p{L} .'-]+$";
        isValidComm = patientComm.matches(regex);
        if (isValidComm) {
            return patientComm;
        } else {
            return "";
        }
    }

    public String checkPatientCity(String patientCity) {
        String regex = "^[a-zA-Z]*$";
        isValidCity = patientCity.matches(regex);
        if (isValidCity && (patientCity.equals("Boston") || patientCity.equals("boston"))) {
            return patientCity;
        } else {
            return "";
        }
    }

    public long checkPincode(String patientPincode) {
        String regex = "\\d{5}";
        long result;
        isValidPincode = patientPincode.matches(regex);
        if (isValidPincode && !patientPincode.isEmpty()) {
            result = Long.parseLong(patientPincode);
        } else {
            result = 0;
        }
        return result;
    }

    private void txtPatientIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPatientIDFocusLost
        // TODO add your handling code here:
        patientID = checkPatientID(txtPatientID.getText());
        if (txtPatientID.getText().isEmpty()) {
            lblWarningPatID.setVisible(false);
        } else {
            if (patientID == 0) {
                txtPatientID.setText("");
                lblWarningPatID.setVisible(true);
            } else {
                lblWarningPatID.setVisible(false);
            }
        }
    }//GEN-LAST:event_txtPatientIDFocusLost

    private void txtPatientNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPatientNameFocusLost
        // TODO add your handling code here:
        String typedPatientName = txtPatientName.getText();
        patientName = checkPatientName(typedPatientName);
        if (typedPatientName.isEmpty()) {
            lblWarningPatName.setVisible(false);
        } else {
            if (isValidName) {
                lblWarningPatName.setVisible(false);
            } else {
                lblWarningPatName.setVisible(true);
            }
        }
    }//GEN-LAST:event_txtPatientNameFocusLost

    private void txtPatientCommFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPatientCommFocusLost
        // TODO add your handling code here:
        String typedPatientComm = txtPatientComm.getText();
        patientComm = checkPatientComm(typedPatientComm);
        if (typedPatientComm.isEmpty()) {
            lblWarningComm.setVisible(false);
        } else {
            if (isValidComm) {
                lblWarningComm.setVisible(false);
            } else {
                lblWarningComm.setVisible(true);
            }
        }
    }//GEN-LAST:event_txtPatientCommFocusLost

    private void txtPatientCityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPatientCityFocusLost
        // TODO add your handling code here:
        String typedPatientCity = txtPatientCity.getText();
        patientCity = checkPatientCity(typedPatientCity);
        if (typedPatientCity.isEmpty()) {
            lblWarningCity.setVisible(false);
        } else {
            if (isValidCity) {
                lblWarningCity.setVisible(false);
            } else {
                lblWarningCity.setVisible(true);
            }
        }
    }//GEN-LAST:event_txtPatientCityFocusLost

    private void txtPatientPincodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPatientPincodeFocusLost
        // TODO add your handling code here:
        patientPincode = checkPincode(txtPatientPincode.getText());
        if (txtPatientPincode.getText().isEmpty()) {
            lblWarningPincode.setVisible(false);
        } else {
            if (patientPincode == 0) {
                txtPatientPincode.setText("");
                lblWarningPincode.setVisible(true);
            } else {
                lblWarningPincode.setVisible(false);
            }
        }
    }//GEN-LAST:event_txtPatientPincodeFocusLost

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int personInd = tblViewPatientRecords.getSelectedRow();

        if (personInd < 0) {
            //if there is no row selected then a dialog is displayed
            JOptionPane.showMessageDialog(this, "Select the Hospital to be Updated.");
            return;
        }

        DefaultTableModel personTable = (DefaultTableModel) tblViewPatientRecords.getModel();

        Person selectedPerson = (Person) personTable.getValueAt(personInd, 1);

        String personName = txtPatientName.getText();
        String personCommunity = txtPatientComm.getText();
        String personCity = txtPatientCity.getText();
        long personPincode = Long.parseLong(txtPatientPincode.getText());

        Person updatePerson = personList.updatePersonDetails(selectedPerson, personInd);

        updatePerson.setPersonName(personName);
        updatePerson.setPersonCommunity(personCommunity);
        updatePerson.setPersonCity(personCity);
        updatePerson.setPincode(personPincode);

        JOptionPane.showMessageDialog(this, "Updated Details");

        txtPatientID.setText("");
        txtPatientName.setText("");
        txtPatientComm.setText("");
        txtPatientCity.setText("");
        txtPatientPincode.setText("");

        populateTableWithPersonRecords();

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDetailsActionPerformed
        // TODO add your handling code here:
        int personInd = tblViewPatientRecords.getSelectedRow();

        if (personInd < 0) {
            //if there is no row selected then a dialog is displayed
            JOptionPane.showMessageDialog(this, "Select the Person Record to be Updated.");
            return;
        }

        DefaultTableModel personTable = (DefaultTableModel) tblViewPatientRecords.getModel();

        Person selectedPerson = (Person) personTable.getValueAt(personInd, 1);

        txtPatientID.setText(String.valueOf(selectedPerson.getPersonId()));
        txtPatientName.setText(selectedPerson.getPersonName());
        txtPatientComm.setText(selectedPerson.getPersonCommunity());
        txtPatientCity.setText(selectedPerson.getPersonCity());
        txtPatientPincode.setText(String.valueOf(selectedPerson.getPincode()));
    }//GEN-LAST:event_btnUpdateDetailsActionPerformed

    private void txtPatientIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPatientIDFocusGained
        // TODO add your handling code here:
        lblWarningPatID.setVisible(true);
    }//GEN-LAST:event_txtPatientIDFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteDetails;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdateDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPatienCity;
    private javax.swing.JLabel lblPatientComm;
    private javax.swing.JLabel lblPatientId;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientPincode;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWarningCity;
    private javax.swing.JLabel lblWarningComm;
    private javax.swing.JLabel lblWarningPatID;
    private javax.swing.JLabel lblWarningPatName;
    private javax.swing.JLabel lblWarningPincode;
    private javax.swing.JTable tblViewPatientRecords;
    private javax.swing.JTextField txtPatientCity;
    private javax.swing.JTextField txtPatientComm;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientPincode;
    // End of variables declaration//GEN-END:variables
}
